- javascript :defaults

- title "#{t(:invoice_trails)}"

%p= link_to "#{t(:new)} #{t(:invoice_trail)}", new_invoice_trail_path

- form_for @search do |f|
  %fieldset
    %legend
      = t(:search_criteria)

    %p
      = f.label :admission_date_after, t(:admission_date_after)
      / = f.date_select :admission_date_after, :discard_day  => true, :default => 3.months.ago
      = f.text_field :admission_date_after, :size => 8, :default => 3.months.ago.to_s(:db)
      
      = f.label :admission_date_before, t(:admission_date_before)
      / = f.date_select :admission_date_before, :discard_day  => true
      = f.text_field :admission_date_before, :size => 8, :default => Time.now.to_s(:db)
      \&nbsp;&nbsp;
      
      = f.radio_button :payment_status, :payment_uncompleted
      = t(:payment_uncompleted) 
      &nbsp;
      
      = f.radio_button :payment_status, :payment_completed
      = t(:payment_completed)
      \&nbsp;&nbsp;&nbsp;
      
      = f.label :invoice_number, t(:invoice_number)
      = f.text_field :invoice_number, :size => 6

    %p  
      = f.label :admission_code, t(:admission_code)
      = f.text_field :admission_code, :size => 6
      \&nbsp;&nbsp;&nbsp;
      
      = f.label :last_name_contains, t(:last_name)
      = f.text_field :last_name_contains, :size => 15
      \&nbsp;&nbsp;&nbsp;&nbsp;
      
      = f.label :first_name_contains, t(:first_name)
      = f.text_field :first_name_contains, :size => 15
      \&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      
      = f.label :notes_contains, t(:notes)
      = f.text_field :notes_contains, :size => 15

      / \&nbsp;&nbsp;
      / = f.label :payed, 'Payment Status:'
      / \&nbsp;&nbsp;
      / = f.radio_button :payed, true
      / Payed&nbsp;&nbsp;
      / = f.radio_button :payed, false
      / Not Payed&nbsp;&nbsp;

      / = f.label :invoice_is_nil, 'Invoice is nil:'
      / \&nbsp;&nbsp;- javascript :defaults
      
      / = f.check_box :invoice_not_nil, true
        
  %p.button
    = f.submit t(:filter)

- unless  @invoice_trails_count.zero?

  %p
    = will_paginate @maintenances

  %table
    %tr
      %th= order @search, :by => :id, :as =>"ID"
      %th= order @search, :by => :admission_date, :as =>t(:admission_date)
      %th= t(:admission_code)
      %th= order @search, :by => :full_name, :as =>t(:full_name)
      %th= order @search, :by => :gross_amount, :as =>t(:gross_amount)
      %th= order @search, :by => :payed_amount, :as =>t(:payed_amount)
      %th= order @search, :by => :discount, :as =>t(:discount)     
      %th= t(:payed)
      %th= order @search, :by => :payment_date, :as =>t(:payment_date)
      %th= order @search, :by => :invoice_number, :as =>t(:invoice_number)
      %th= t(:notes)
    - for invoice_trail in @invoice_trails
      %tr
        %td= h invoice_trail.id  
        %td= h invoice_trail.admission_date
        %td= h invoice_trail.admission_code
        %td= h invoice_trail.full_name
        %td= h invoice_trail.gross_amount
        %td= h invoice_trail.payed_amount
        %td= h invoice_trail.discount
        %td= h invoice_trail.payed
        %td= h invoice_trail.payment_date
        %td= h invoice_trail.invoice_number
        %td= h invoice_trail.notes
        %td= link_to t(:show), invoice_trail
        %td= link_to t(:mark_as_payed), invoice_trail 
        / segna pagato dovrebbe comparire solo sulle righe in cui non compare
        / il pagamento
        / Pagato

  %p
    = will_paginate @maintenances

  %p
    %strong="#{@invoice_trails_count} #{t(inflect_result(@invoice_trails_count))}"
- else
  %h3{:text_align => :center}=t(:no_results)